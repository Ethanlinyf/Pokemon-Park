(undo-tree-save-format-version . 1)
"588456d5966c0d36155d30d08573e5ae50ab02ed"
[nil nil nil nil (25629 9747 656838 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 858 . 859) (nil fontified nil 1 . 859) (1 . 859) (t 25629 4209 323038 851000)) nil (25629 9747 656838 0) 0 nil])
([nil nil ((1 . 3)) nil (25629 9747 656837 0) 0 nil])
([nil nil ((1 . 14)) nil (25629 9747 656836 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -190) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 191) nil (25629 9747 656835 0) 0 nil])
([nil nil ((190 . 191)) nil (25629 9747 656819 0) 0 nil])
([nil nil ((191 . 192)) nil (25629 9747 656818 0) 0 nil])
([nil nil ((875 . 876)) nil (25629 9747 656815 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -190) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#("0" 0 1 (fontified t)) . -191) (undo-tree-id441 . -1) (undo-tree-id442 . -1) 192 (t 25629 9747 659359 808000)) nil (25629 14179 473784 0) 0 nil])
([nil nil ((190 . 192)) nil (25629 14179 473781 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -191) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) 192) nil (25629 14179 473779 0) 0 nil])
([nil nil ((191 . 192)) nil (25629 14179 473729 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 191) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (192 . 193)) nil (25629 14179 473726 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -191) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . 1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 192) nil (25629 14179 473684 0) 0 nil])
([nil nil ((875 . 880) (t 25629 14179 474942 898000)) nil (25629 14295 916416 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -876) (undo-tree-id463 . -4) 880) nil (25629 14295 916415 0) 0 nil])
([nil nil ((876 . 884)) nil (25629 14295 916414 0) 0 nil])
([nil nil ((880 . 887) (#("main" 0 4 (face font-lock-function-name-face fontified t)) . -880) (undo-tree-id461 . -4) (undo-tree-id462 . -4) 884) nil (25629 14295 916413 0) 0 nil])
([nil nil ((887 . 892)) nil (25629 14295 916412 0) 0 nil])
([nil nil ((892 . 896)) nil (25629 14295 916412 0) 0 nil])
([nil nil ((892 . 896) (#("pass" 0 4 (face font-lock-keyword-face fontified t)) . -892) (undo-tree-id459 . -4) (undo-tree-id460 . -4) 896) nil (25629 14295 916411 0) 0 nil])
([nil nil ((896 . 898)) nil (25629 14295 916409 0) 0 nil])
([nil nil ((898 . 900)) nil (25629 14295 916409 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -898) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("e" 0 1 (fontified t)) . -899) (undo-tree-id457 . -1) (undo-tree-id458 . -1) 900) nil (25629 14295 916408 0) 0 nil])
([nil nil ((898 . 900)) nil (25629 14295 916406 0) 0 nil])
([nil nil ((900 . 905)) nil (25629 14295 916406 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -901) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#("a" 0 1 (fontified t)) . -902) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("i" 0 1 (fontified t)) . -903) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("n" 0 1 (fontified t)) . -904) (undo-tree-id453 . -1) (undo-tree-id454 . -1) 905) nil (25629 14295 916405 0) 0 nil])
([nil nil ((901 . 903)) nil (25629 14295 916400 0) 0 nil])
([nil nil ((901 . 924) (#("na" 0 2 (fontified t)) . -901) (undo-tree-id445 . -2) (undo-tree-id446 . -2) 903) nil (25629 14295 916400 0) 0 nil])
([nil nil ((924 . 929)) nil (25629 14295 916398 0) 0 nil])
([nil nil ((929 . 933)) nil (25629 14295 916398 0) 0 nil])
([nil nil ((929 . 933) (#("main" 0 4 (fontified t)) . -929) (undo-tree-id443 . -4) (undo-tree-id444 . -4) 933) nil (25629 14295 916396 0) 0 nil])
([nil nil ((933 . 935)) nil (25629 14295 916390 0) 0 nil])
([nil nil ((935 . 936)) nil (25629 14295 916387 0) 0 nil])
([nil nil ((192 . 193) (t 25629 14295 917933 53000)) nil (25629 14370 168676 0) 0 nil])
([nil nil ((193 . 209)) nil (25629 14370 168675 0) 0 nil])
([nil nil ((209 . 210)) nil (25629 14370 168675 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -209) (undo-tree-id732 . -1) 210) nil (25629 14370 168674 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -208) (undo-tree-id730 . -1) (undo-tree-id731 . -1) 209) nil (25629 14370 168673 0) 0 nil])
([nil nil ((208 . 209)) nil (25629 14370 168672 0) 0 nil])
([nil nil ((197 . 212) (#("guess_number" 0 12 (face font-lock-function-name-face fontified t)) . -197) (undo-tree-id728 . -12) (undo-tree-id729 . -12) 209) nil (25629 14370 168671 0) 0 nil])
([nil nil ((210 . 213)) nil (25629 14370 168670 0) 0 nil])
([nil nil ((213 . 215)) nil (25629 14370 168670 0) 0 nil])
([nil nil ((#("):" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (fontified nil)) . 217) (210 . 217) (#("guess" 0 5 (fontified t)) . -210) (undo-tree-id726 . -5) (undo-tree-id727 . -5) 215) nil (25629 14370 168669 0) 0 nil])
([nil nil ((217 . 222)) nil (25629 14370 168667 0) 0 nil])
([nil nil ((217 . 222)) nil (25629 14370 168667 0) 0 nil])
([nil nil ((#("    if guess == number:
        print(\"Congratulations, you guessed the number in\", guesses, \"guesses!\")
        break
    elif guess < number:
        print(\"Too low, try again.\")
    else:
        print(\"Too high, try again.\")" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 13 (fontified t) 13 15 (face font-lock-operator-face fontified t) 15 32 (fontified t) 32 37 (face font-lock-builtin-face fontified t) 37 38 (face (rainbow-delimiters-depth-1-face) fontified t) 38 82 (face font-lock-string-face fontified t) 82 93 (fontified t) 93 103 (face font-lock-string-face fontified t) 103 104 (face (rainbow-delimiters-depth-1-face) fontified t) 104 113 (fontified t) 113 118 (face font-lock-keyword-face fontified t) 118 123 (fontified t) 123 127 (face font-lock-keyword-face fontified t) 127 134 (fontified t) 134 135 (face font-lock-operator-face fontified t) 135 152 (fontified t) 152 157 (face font-lock-builtin-face fontified t) 157 158 (face (rainbow-delimiters-depth-1-face) fontified t) 158 179 (face font-lock-string-face fontified t) 179 180 (face (rainbow-delimiters-depth-1-face) fontified t) 180 185 (fontified t) 185 189 (face font-lock-keyword-face fontified t) 189 199 (fontified t) 199 204 (face font-lock-builtin-face fontified t) 204 205 (face (rainbow-delimiters-depth-1-face) fontified t) 205 227 (face font-lock-string-face fontified t) 227 228 (face (rainbow-delimiters-depth-1-face) fontified t)) . 510) (undo-tree-id572 . -190) (undo-tree-id573 . -190) (undo-tree-id574 . -190) (undo-tree-id575 . -190) (undo-tree-id576 . -190) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -191) (undo-tree-id580 . -228) (undo-tree-id581 . -228) (undo-tree-id582 . -199) (undo-tree-id583 . -228) (undo-tree-id584 . -199) (undo-tree-id585 . -228) (undo-tree-id586 . -199) (undo-tree-id587 . -199) (undo-tree-id588 . -228) (undo-tree-id589 . -199) (undo-tree-id590 . -199) (undo-tree-id591 . -199) (undo-tree-id592 . -228) (undo-tree-id593 . -199) (undo-tree-id594 . -185) (undo-tree-id595 . -185) (undo-tree-id596 . -185) (undo-tree-id597 . -185) (undo-tree-id598 . -185) (undo-tree-id599 . -152) (undo-tree-id600 . -180) (undo-tree-id601 . -152) (undo-tree-id602 . -180) (undo-tree-id603 . -152) (undo-tree-id604 . -152) (undo-tree-id605 . -152) (undo-tree-id606 . -152) (undo-tree-id607 . -123) (undo-tree-id608 . -123) (undo-tree-id609 . -123) (undo-tree-id610 . -143) (undo-tree-id611 . -180) (undo-tree-id612 . -180) (undo-tree-id613 . -180) (undo-tree-id614 . -152) (undo-tree-id615 . -152) (undo-tree-id616 . -152) (undo-tree-id617 . -123) (undo-tree-id618 . -123) (undo-tree-id619 . -123) (undo-tree-id620 . -123) (undo-tree-id621 . -123) (undo-tree-id622 . -113) (undo-tree-id623 . -113) (undo-tree-id624 . -118) (undo-tree-id625 . -113) (undo-tree-id626 . -113) (undo-tree-id627 . -113) (undo-tree-id628 . -113) (undo-tree-id629 . -118) (undo-tree-id630 . -113) (undo-tree-id631 . -32) (undo-tree-id632 . -104) (undo-tree-id633 . -32) (undo-tree-id634 . -104) (undo-tree-id635 . -32) (undo-tree-id636 . -32) (undo-tree-id637 . -32) (undo-tree-id638 . -32) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -23) (undo-tree-id643 . -104) (undo-tree-id644 . -118) (undo-tree-id645 . -118) (undo-tree-id646 . -104) (undo-tree-id647 . -32) (undo-tree-id648 . -32) (undo-tree-id649 . -32) (undo-tree-id650 . -104) (undo-tree-id651 . -32) (undo-tree-id652 . -4) (undo-tree-id653 . -23) (undo-tree-id654 . -4) (undo-tree-id655 . -23) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -23) (undo-tree-id663 . -104) (undo-tree-id664 . -118) (undo-tree-id665 . -143) (undo-tree-id666 . -180) (undo-tree-id667 . -190) (undo-tree-id668 . -228) (undo-tree-id669 . -228) (undo-tree-id670 . -23) (undo-tree-id671 . -104) (undo-tree-id672 . -118) (undo-tree-id673 . -143) (undo-tree-id674 . -180) (undo-tree-id675 . -190) (undo-tree-id676 . -228) (undo-tree-id677 . -228) (undo-tree-id678 . -228) (undo-tree-id679 . -228) (undo-tree-id680 . -228) (undo-tree-id681 . -228) (undo-tree-id682 . -228) (undo-tree-id683 . -228) (undo-tree-id684 . -228) (undo-tree-id685 . -228) (undo-tree-id686 . -228) (undo-tree-id687 . -228) (undo-tree-id688 . -228) (undo-tree-id689 . -228) (undo-tree-id690 . -228) (undo-tree-id691 . -228) (undo-tree-id692 . -228) (undo-tree-id693 . -228) (undo-tree-id694 . -228) (undo-tree-id695 . -228) (undo-tree-id696 . -228) (undo-tree-id697 . -228) (undo-tree-id698 . -228) (undo-tree-id699 . -228) (undo-tree-id700 . -228) (undo-tree-id701 . -228) (undo-tree-id702 . -228) (undo-tree-id703 . -228) (undo-tree-id704 . -228) (undo-tree-id705 . -228) (undo-tree-id706 . -228) (undo-tree-id707 . -228) (undo-tree-id708 . -228) (undo-tree-id709 . -228) (undo-tree-id710 . -228) (undo-tree-id711 . -228) (undo-tree-id712 . -228) (undo-tree-id713 . -228) (undo-tree-id714 . -228) (undo-tree-id715 . -228) (undo-tree-id716 . -228) (undo-tree-id717 . -228) (undo-tree-id718 . -228) (undo-tree-id719 . -228) (undo-tree-id720 . -228) (undo-tree-id721 . -228) (undo-tree-id722 . -228) (undo-tree-id723 . -228) (undo-tree-id724 . -228) (undo-tree-id725 . -228) 738) nil (25629 14370 168664 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -218) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) 222) nil (25629 14370 168603 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 445 . 446) (nil fontified nil 445 . 446) (nil fontified nil 423 . 445) (nil fontified nil 422 . 423) (nil fontified nil 417 . 422) (nil fontified nil 407 . 417) (nil fontified nil 403 . 407) (nil fontified nil 398 . 403) (nil fontified nil 397 . 398) (nil fontified nil 376 . 397) (nil fontified nil 375 . 376) (nil fontified nil 370 . 375) (nil fontified nil 353 . 370) (nil fontified nil 352 . 353) (nil fontified nil 345 . 352) (nil fontified nil 341 . 345) (nil fontified nil 336 . 341) (nil fontified nil 331 . 336) (nil fontified nil 322 . 331) (nil fontified nil 321 . 322) (nil fontified nil 311 . 321) (nil fontified nil 300 . 311) (nil fontified nil 256 . 300) (nil fontified nil 255 . 256) (nil fontified nil 250 . 255) (nil fontified nil 233 . 250) (nil fontified nil 231 . 233) (nil fontified nil 224 . 231) (nil fontified nil 222 . 224) (nil fontified nil 218 . 222) (218 . 446)) nil (25629 14370 168554 0) 0 nil])
([nil nil ((734 . 738) (t 25629 14370 170175 907000)) nil (25629 14387 662371 0) 0 nil])
([nil nil ((738 . 745)) nil (25629 14387 662370 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -744) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) 745) nil (25629 14387 662369 0) 0 nil])
([nil nil ((744 . 750)) nil (25629 14387 662367 0) 0 nil])
([nil nil ((738 . 757) (#("guess_number" 0 12 (fontified t)) . -738) (undo-tree-id733 . -10) (undo-tree-id734 . -9) (undo-tree-id735 . -10) (undo-tree-id736 . -10) (undo-tree-id737 . -10) (undo-tree-id738 . -10) (undo-tree-id739 . -10) (undo-tree-id740 . -10) (undo-tree-id741 . -10) (undo-tree-id742 . -10) (undo-tree-id743 . -10) (undo-tree-id744 . -10) (undo-tree-id745 . -10) (undo-tree-id746 . -10) (undo-tree-id747 . -10) (undo-tree-id748 . -10) (undo-tree-id749 . -10) (undo-tree-id750 . -10) (undo-tree-id751 . -10) (undo-tree-id752 . -10) (undo-tree-id753 . -10) (undo-tree-id754 . -10) (undo-tree-id755 . -10) (undo-tree-id756 . -10) (undo-tree-id757 . -10) (undo-tree-id758 . -10) (undo-tree-id759 . -10) (undo-tree-id760 . -10) (undo-tree-id761 . -10) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (undo-tree-id764 . -10) (undo-tree-id765 . -10) (undo-tree-id766 . -10) (undo-tree-id767 . -10) (undo-tree-id768 . -10) (undo-tree-id769 . -10) (undo-tree-id770 . -10) (undo-tree-id771 . -10) (undo-tree-id772 . -10) (undo-tree-id773 . -10) (undo-tree-id774 . -10) (undo-tree-id775 . -10) (undo-tree-id776 . -10) (undo-tree-id777 . -10) (undo-tree-id778 . -10) (undo-tree-id779 . -10) (undo-tree-id780 . -10) (undo-tree-id781 . -10) (undo-tree-id782 . -10) (undo-tree-id783 . -10) (undo-tree-id784 . -10) (undo-tree-id785 . -10) (undo-tree-id786 . -10) (undo-tree-id787 . -10) (undo-tree-id788 . -10) (undo-tree-id789 . -10) (undo-tree-id790 . -10) (undo-tree-id791 . -10) (undo-tree-id792 . -10) (undo-tree-id793 . -10) (undo-tree-id794 . -10) (undo-tree-id795 . -10) (undo-tree-id796 . -10) (undo-tree-id797 . -10) (undo-tree-id798 . -10) (undo-tree-id799 . -10) (undo-tree-id800 . -10) (undo-tree-id801 . -10) (undo-tree-id802 . -10) (undo-tree-id803 . -10) (undo-tree-id804 . -10) (undo-tree-id805 . -10) (undo-tree-id806 . -10) (undo-tree-id807 . -10) (undo-tree-id808 . -10) (undo-tree-id809 . -10) (undo-tree-id810 . -10) (undo-tree-id811 . -10) (undo-tree-id812 . -10) (undo-tree-id813 . -10) (undo-tree-id814 . -10) (undo-tree-id815 . -10) (undo-tree-id816 . -10) (undo-tree-id817 . -10) (undo-tree-id818 . -10) (undo-tree-id819 . -10) (undo-tree-id820 . -10) (undo-tree-id821 . -10) (undo-tree-id822 . -10) (undo-tree-id823 . -10) (undo-tree-id824 . -10) (undo-tree-id825 . -10) (undo-tree-id826 . -10) (undo-tree-id827 . -10) (undo-tree-id828 . -10) (undo-tree-id829 . -10) (undo-tree-id830 . -10) (undo-tree-id831 . -10) (undo-tree-id832 . -10) (undo-tree-id833 . -10) (undo-tree-id834 . -10) (undo-tree-id835 . -10) (undo-tree-id836 . -10) (undo-tree-id837 . -10) (undo-tree-id838 . -10) (undo-tree-id839 . -10) (undo-tree-id840 . -10) (undo-tree-id841 . -10) (undo-tree-id842 . -10) (undo-tree-id843 . -10) (undo-tree-id844 . -10) (undo-tree-id845 . -10) (undo-tree-id846 . -10) (undo-tree-id847 . -10) (undo-tree-id848 . -10) (undo-tree-id849 . -10) (undo-tree-id850 . -10) (undo-tree-id851 . -10) (undo-tree-id852 . -10) (undo-tree-id853 . -10) (undo-tree-id854 . -10) (undo-tree-id855 . -10) (undo-tree-id856 . -10) (undo-tree-id857 . -10) (undo-tree-id858 . -10) (undo-tree-id859 . -10) (undo-tree-id860 . -10) (undo-tree-id861 . -10) (undo-tree-id862 . -10) (undo-tree-id863 . -10) (undo-tree-id864 . -10) (undo-tree-id865 . -10) (undo-tree-id866 . -10) (undo-tree-id867 . -10) (undo-tree-id868 . -10) (undo-tree-id869 . -10) (undo-tree-id870 . -11) (undo-tree-id871 . -11) (undo-tree-id872 . -11) (undo-tree-id873 . -11) (undo-tree-id874 . -11) (undo-tree-id875 . -11) (undo-tree-id876 . -11) (undo-tree-id877 . -11) (undo-tree-id878 . -11) (undo-tree-id879 . -11) (undo-tree-id880 . -11) (undo-tree-id881 . -11) (undo-tree-id882 . -11) (undo-tree-id883 . -11) (undo-tree-id884 . -11) (undo-tree-id885 . -11) (undo-tree-id886 . -11) (undo-tree-id887 . -11) (undo-tree-id888 . -11) (undo-tree-id889 . -11) (undo-tree-id890 . -11) (undo-tree-id891 . -11) (undo-tree-id892 . -10) (undo-tree-id893 . -11) (undo-tree-id894 . -11) (undo-tree-id895 . -11) (undo-tree-id896 . -11) (undo-tree-id897 . -11) (undo-tree-id898 . -11) (undo-tree-id899 . -11) (undo-tree-id900 . -11) (undo-tree-id901 . -11) (undo-tree-id902 . -11) (undo-tree-id903 . -11) (undo-tree-id904 . -11) (undo-tree-id905 . -11) (undo-tree-id906 . -11) (undo-tree-id907 . -11) (undo-tree-id908 . -11) (undo-tree-id909 . -11) (undo-tree-id910 . -11) (undo-tree-id911 . -11) (undo-tree-id912 . -11) (undo-tree-id913 . -11) (undo-tree-id914 . -11) (undo-tree-id915 . -11) (undo-tree-id916 . -11) (undo-tree-id917 . -11) (undo-tree-id918 . -11) (undo-tree-id919 . -11) (undo-tree-id920 . -11) (undo-tree-id921 . -11) (undo-tree-id922 . -11) (undo-tree-id923 . -11) (undo-tree-id924 . -11) (undo-tree-id925 . -11) (undo-tree-id926 . -11) (undo-tree-id927 . -11) (undo-tree-id928 . -11) (undo-tree-id929 . -11) (undo-tree-id930 . -11) (undo-tree-id931 . -11) (undo-tree-id932 . -11) (undo-tree-id933 . -11) (undo-tree-id934 . -11) (undo-tree-id935 . -11) (undo-tree-id936 . -11) (undo-tree-id937 . -11) (undo-tree-id938 . -11) (undo-tree-id939 . -11) (undo-tree-id940 . -11) (undo-tree-id941 . -11) (undo-tree-id942 . -11) (undo-tree-id943 . -11) (undo-tree-id944 . -11) (undo-tree-id945 . -11) (undo-tree-id946 . -11) (undo-tree-id947 . -11) (undo-tree-id948 . -11) (undo-tree-id949 . -11) (undo-tree-id950 . -11) (undo-tree-id951 . -11) (undo-tree-id952 . -11) (undo-tree-id953 . -11) (undo-tree-id954 . -11) (undo-tree-id955 . -11) (undo-tree-id956 . -11) (undo-tree-id957 . -11) (undo-tree-id958 . -11) (undo-tree-id959 . -11) (undo-tree-id960 . -11) (undo-tree-id961 . -11) (undo-tree-id962 . -11) (undo-tree-id963 . -11) (undo-tree-id964 . -11) (undo-tree-id965 . -11) (undo-tree-id966 . -11) (undo-tree-id967 . -11) (undo-tree-id968 . -11) (undo-tree-id969 . -11) (undo-tree-id970 . -11) (undo-tree-id971 . -11) (undo-tree-id972 . -11) (undo-tree-id973 . -11) (undo-tree-id974 . -11) (undo-tree-id975 . -11) (undo-tree-id976 . -11) (undo-tree-id977 . -11) (undo-tree-id978 . -11) (undo-tree-id979 . -11) (undo-tree-id980 . -11) (undo-tree-id981 . -11) (undo-tree-id982 . -11) (undo-tree-id983 . -11) (undo-tree-id984 . -11) (undo-tree-id985 . -11) (undo-tree-id986 . -11) (undo-tree-id987 . -11) (undo-tree-id988 . -11) (undo-tree-id989 . -11) (undo-tree-id990 . -11) (undo-tree-id991 . -11) (undo-tree-id992 . -11) (undo-tree-id993 . -11) (undo-tree-id994 . -11) (undo-tree-id995 . -11) (undo-tree-id996 . -11) (undo-tree-id997 . -11) (undo-tree-id998 . -11) (undo-tree-id999 . -11) (undo-tree-id1000 . -11) (undo-tree-id1001 . -11) (undo-tree-id1002 . -11) (undo-tree-id1003 . -11) (undo-tree-id1004 . -11) (undo-tree-id1005 . -11) (undo-tree-id1006 . -11) (undo-tree-id1007 . -11) (undo-tree-id1008 . -11) (undo-tree-id1009 . -11) (undo-tree-id1010 . -11) (undo-tree-id1011 . -11) (undo-tree-id1012 . -11) (undo-tree-id1013 . -11) (undo-tree-id1014 . -11) (undo-tree-id1015 . -11) (undo-tree-id1016 . -11) (undo-tree-id1017 . -11) (undo-tree-id1018 . -11) (undo-tree-id1019 . -11) (undo-tree-id1020 . -11) (undo-tree-id1021 . -11) (undo-tree-id1022 . -11) (undo-tree-id1023 . -11) (undo-tree-id1024 . -11) (undo-tree-id1025 . -11) (undo-tree-id1026 . -11) (undo-tree-id1027 . -11) (undo-tree-id1028 . -11) (undo-tree-id1029 . -11) (undo-tree-id1030 . -11) (undo-tree-id1031 . -11) (undo-tree-id1032 . -11) (undo-tree-id1033 . -11) (undo-tree-id1034 . -11) (undo-tree-id1035 . -11) (undo-tree-id1036 . -11) (undo-tree-id1037 . -11) (undo-tree-id1038 . -11) (undo-tree-id1039 . -11) (undo-tree-id1040 . -11) (undo-tree-id1041 . -11) (undo-tree-id1042 . -11) (undo-tree-id1043 . -11) (undo-tree-id1044 . -11) (undo-tree-id1045 . -11) (undo-tree-id1046 . -11) (undo-tree-id1047 . -11) (undo-tree-id1048 . -11) (undo-tree-id1049 . -11) (undo-tree-id1050 . -11) (undo-tree-id1051 . -11) (undo-tree-id1052 . -12) (undo-tree-id1053 . -12) (undo-tree-id1054 . -12) (undo-tree-id1055 . -12) (undo-tree-id1056 . -12) (undo-tree-id1057 . -12) (undo-tree-id1058 . -12) (undo-tree-id1059 . -12) (undo-tree-id1060 . -12) (undo-tree-id1061 . -12) (undo-tree-id1062 . -12) (undo-tree-id1063 . -12) (undo-tree-id1064 . -12) (undo-tree-id1065 . -12) (undo-tree-id1066 . -12) (undo-tree-id1067 . -12) (undo-tree-id1068 . -12) (undo-tree-id1069 . -12) (undo-tree-id1070 . -12) (undo-tree-id1071 . -12) (undo-tree-id1072 . -12) (undo-tree-id1073 . -12) (undo-tree-id1074 . -11) (undo-tree-id1075 . -12) (undo-tree-id1076 . -12) (undo-tree-id1077 . -12) (undo-tree-id1078 . -12) (undo-tree-id1079 . -12) (undo-tree-id1080 . -12) (undo-tree-id1081 . -12) (undo-tree-id1082 . -12) (undo-tree-id1083 . -12) (undo-tree-id1084 . -12) (undo-tree-id1085 . -12) (undo-tree-id1086 . -12) (undo-tree-id1087 . -12) (undo-tree-id1088 . -12) (undo-tree-id1089 . -12) (undo-tree-id1090 . -12) (undo-tree-id1091 . -12) (undo-tree-id1092 . -12) (undo-tree-id1093 . -12) (undo-tree-id1094 . -12) (undo-tree-id1095 . -12) (undo-tree-id1096 . -12) (undo-tree-id1097 . -12) (undo-tree-id1098 . -12) (undo-tree-id1099 . -12) (undo-tree-id1100 . -12) (undo-tree-id1101 . -12) (undo-tree-id1102 . -12) (undo-tree-id1103 . -12) (undo-tree-id1104 . -12) (undo-tree-id1105 . -12) (undo-tree-id1106 . -12) (undo-tree-id1107 . -12) (undo-tree-id1108 . -12) (undo-tree-id1109 . -12) (undo-tree-id1110 . -12) (undo-tree-id1111 . -12) (undo-tree-id1112 . -12) (undo-tree-id1113 . -12) (undo-tree-id1114 . -12) (undo-tree-id1115 . -12) (undo-tree-id1116 . -12) (undo-tree-id1117 . -12) (undo-tree-id1118 . -12) (undo-tree-id1119 . -12) (undo-tree-id1120 . -12) (undo-tree-id1121 . -12) (undo-tree-id1122 . -12) (undo-tree-id1123 . -12) (undo-tree-id1124 . -12) (undo-tree-id1125 . -12) (undo-tree-id1126 . -12) (undo-tree-id1127 . -12) (undo-tree-id1128 . -12) (undo-tree-id1129 . -12) (undo-tree-id1130 . -12) (undo-tree-id1131 . -12) (undo-tree-id1132 . -12) (undo-tree-id1133 . -12) (undo-tree-id1134 . -12) (undo-tree-id1135 . -12) (undo-tree-id1136 . -12) (undo-tree-id1137 . -12) (undo-tree-id1138 . -12) (undo-tree-id1139 . -12) (undo-tree-id1140 . -12) (undo-tree-id1141 . -12) (undo-tree-id1142 . -12) (undo-tree-id1143 . -12) (undo-tree-id1144 . -12) (undo-tree-id1145 . -12) (undo-tree-id1146 . -12) (undo-tree-id1147 . -12) (undo-tree-id1148 . -12) (undo-tree-id1149 . -12) (undo-tree-id1150 . -12) (undo-tree-id1151 . -12) (undo-tree-id1152 . -12) (undo-tree-id1153 . -12) (undo-tree-id1154 . -12) (undo-tree-id1155 . -12) (undo-tree-id1156 . -12) (undo-tree-id1157 . -12) (undo-tree-id1158 . -12) (undo-tree-id1159 . -12) (undo-tree-id1160 . -12) (undo-tree-id1161 . -12) (undo-tree-id1162 . -12) (undo-tree-id1163 . -12) (undo-tree-id1164 . -12) (undo-tree-id1165 . -12) (undo-tree-id1166 . -12) (undo-tree-id1167 . -12) (undo-tree-id1168 . -12) (undo-tree-id1169 . -12) (undo-tree-id1170 . -12) (undo-tree-id1171 . -12) (undo-tree-id1172 . -12) (undo-tree-id1173 . -12) (undo-tree-id1174 . -12) (undo-tree-id1175 . -12) (undo-tree-id1176 . -12) (undo-tree-id1177 . -12) (undo-tree-id1178 . -12) (undo-tree-id1179 . -12) (undo-tree-id1180 . -12) (undo-tree-id1181 . -12) (undo-tree-id1182 . -12) (undo-tree-id1183 . -12) (undo-tree-id1184 . -12) (undo-tree-id1185 . -12) (undo-tree-id1186 . -12) (undo-tree-id1187 . -12) (undo-tree-id1188 . -12) (undo-tree-id1189 . -12) (undo-tree-id1190 . -12) (undo-tree-id1191 . -12) (undo-tree-id1192 . -12) (undo-tree-id1193 . -12) (undo-tree-id1194 . -12) (undo-tree-id1195 . -12) (undo-tree-id1196 . -12) (undo-tree-id1197 . -12) (undo-tree-id1198 . -12) (undo-tree-id1199 . -12) (undo-tree-id1200 . -12) (undo-tree-id1201 . -12) (undo-tree-id1202 . -12) (undo-tree-id1203 . -12) (undo-tree-id1204 . -12) (undo-tree-id1205 . -12) (undo-tree-id1206 . -12) (undo-tree-id1207 . -12) (undo-tree-id1208 . -12) (undo-tree-id1209 . -12) (undo-tree-id1210 . -12) (undo-tree-id1211 . -12) (undo-tree-id1212 . -12) (undo-tree-id1213 . -12) (undo-tree-id1214 . -12) (undo-tree-id1215 . -12) (undo-tree-id1216 . -12) (undo-tree-id1217 . -12) (undo-tree-id1218 . -12) (undo-tree-id1219 . -12) (undo-tree-id1220 . -12) (undo-tree-id1221 . -12) (undo-tree-id1222 . -12) (undo-tree-id1223 . -12) (undo-tree-id1224 . -12) (undo-tree-id1225 . -12) (undo-tree-id1226 . -12) (undo-tree-id1227 . -12) (undo-tree-id1228 . -12) (undo-tree-id1229 . -12) (undo-tree-id1230 . -12) (undo-tree-id1231 . -12) (undo-tree-id1232 . -12) (undo-tree-id1233 . -12) (undo-tree-id1234 . -12) (undo-tree-id1235 . -12) (undo-tree-id1236 . -12) (undo-tree-id1237 . -12) (undo-tree-id1238 . -12) (undo-tree-id1239 . -12) (undo-tree-id1240 . -12) (undo-tree-id1241 . -12) (undo-tree-id1242 . -12) (undo-tree-id1243 . -12) (undo-tree-id1244 . -12) (undo-tree-id1245 . -12) (undo-tree-id1246 . -12) (undo-tree-id1247 . -12) (undo-tree-id1248 . -12) (undo-tree-id1249 . -12) (undo-tree-id1250 . -12) (undo-tree-id1251 . -12) (undo-tree-id1252 . -12) (undo-tree-id1253 . -12) (undo-tree-id1254 . -12) (undo-tree-id1255 . -12) (undo-tree-id1256 . -12) (undo-tree-id1257 . -12) (undo-tree-id1258 . -12) (undo-tree-id1259 . -12) (undo-tree-id1260 . -12) (undo-tree-id1261 . -12) (undo-tree-id1262 . -12) (undo-tree-id1263 . -12) (undo-tree-id1264 . -12) (undo-tree-id1265 . -12) (undo-tree-id1266 . -12) (undo-tree-id1267 . -12) (undo-tree-id1268 . -12) (undo-tree-id1269 . -12) (undo-tree-id1270 . -12) (undo-tree-id1271 . -12) (undo-tree-id1272 . -12) (undo-tree-id1273 . -12) (undo-tree-id1274 . -12) (undo-tree-id1275 . -12) (undo-tree-id1276 . -12) (undo-tree-id1277 . -12) (undo-tree-id1278 . -12) (undo-tree-id1279 . -12) (undo-tree-id1280 . -12) (undo-tree-id1281 . -12) (undo-tree-id1282 . -12) (undo-tree-id1283 . -12) (undo-tree-id1284 . -12) (undo-tree-id1285 . -12) (undo-tree-id1286 . -12) (undo-tree-id1287 . -12) (undo-tree-id1288 . -12) (undo-tree-id1289 . -12) (undo-tree-id1290 . -12) (undo-tree-id1291 . -12) (undo-tree-id1292 . -12) (undo-tree-id1293 . -12) (undo-tree-id1294 . -12) (undo-tree-id1295 . -12) (undo-tree-id1296 . -12) (undo-tree-id1297 . -12) (undo-tree-id1298 . -12) (undo-tree-id1299 . -12) (undo-tree-id1300 . -12) (undo-tree-id1301 . -12) (undo-tree-id1302 . -12) (undo-tree-id1303 . -12) (undo-tree-id1304 . -12) (undo-tree-id1305 . -12) (undo-tree-id1306 . -12) (undo-tree-id1307 . -12) (undo-tree-id1308 . -12) (undo-tree-id1309 . -12) (undo-tree-id1310 . -12) (undo-tree-id1311 . -12) (undo-tree-id1312 . -12) (undo-tree-id1313 . -12) (undo-tree-id1314 . -12) (undo-tree-id1315 . -12) (undo-tree-id1316 . -12) (undo-tree-id1317 . -12) (undo-tree-id1318 . -12) (undo-tree-id1319 . -12) (undo-tree-id1320 . -12) (undo-tree-id1321 . -12) (undo-tree-id1322 . -12) (undo-tree-id1323 . -12) (undo-tree-id1324 . -12) (undo-tree-id1325 . -12) (undo-tree-id1326 . -12) (undo-tree-id1327 . -12) (undo-tree-id1328 . -12) (undo-tree-id1329 . -12) (undo-tree-id1330 . -12) (undo-tree-id1331 . -12) (undo-tree-id1332 . -12) (undo-tree-id1333 . -12) (undo-tree-id1334 . -12) (undo-tree-id1335 . -12) (undo-tree-id1336 . -12) (undo-tree-id1337 . -12) (undo-tree-id1338 . -12) (undo-tree-id1339 . -12) (undo-tree-id1340 . -12) (undo-tree-id1341 . -12) (undo-tree-id1342 . -12) (undo-tree-id1343 . -12) (undo-tree-id1344 . -12) (undo-tree-id1345 . -12) (undo-tree-id1346 . -12) (undo-tree-id1347 . -12) (undo-tree-id1348 . -12) (undo-tree-id1349 . -12) (undo-tree-id1350 . -12) (undo-tree-id1351 . -12) (undo-tree-id1352 . -12) (undo-tree-id1353 . -12) (undo-tree-id1354 . -12) (undo-tree-id1355 . -12) (undo-tree-id1356 . -12) (undo-tree-id1357 . -12) (undo-tree-id1358 . -12) (undo-tree-id1359 . -12) (undo-tree-id1360 . -12) (undo-tree-id1361 . -12) (undo-tree-id1362 . -12) (undo-tree-id1363 . -12) (undo-tree-id1364 . -12) (undo-tree-id1365 . -12) (undo-tree-id1366 . -12) (undo-tree-id1367 . -12) (undo-tree-id1368 . -12) (undo-tree-id1369 . -12) (undo-tree-id1370 . -12) (undo-tree-id1371 . -12) (undo-tree-id1372 . -12) (undo-tree-id1373 . -12) (undo-tree-id1374 . -12) (undo-tree-id1375 . -12) (undo-tree-id1376 . -12) (undo-tree-id1377 . -12) (undo-tree-id1378 . -12) (undo-tree-id1379 . -12) (undo-tree-id1380 . -12) (undo-tree-id1381 . -12) (undo-tree-id1382 . -12) (undo-tree-id1383 . -12) (undo-tree-id1384 . -12) (undo-tree-id1385 . -12) (undo-tree-id1386 . -12) (undo-tree-id1387 . -12) (undo-tree-id1388 . -12) (undo-tree-id1389 . -12) (undo-tree-id1390 . -12) (undo-tree-id1391 . -12) (undo-tree-id1392 . -12) (undo-tree-id1393 . -12) (undo-tree-id1394 . -12) (undo-tree-id1395 . -12) (undo-tree-id1396 . -12) (undo-tree-id1397 . -12) (undo-tree-id1398 . -12) (undo-tree-id1399 . -12) (undo-tree-id1400 . -12) (undo-tree-id1401 . -12) (undo-tree-id1402 . -12) (undo-tree-id1403 . -12) (undo-tree-id1404 . -12) (undo-tree-id1405 . -12) (undo-tree-id1406 . -12) (undo-tree-id1407 . -12) (undo-tree-id1408 . -12) (undo-tree-id1409 . -12) (undo-tree-id1410 . -12) (undo-tree-id1411 . -12) (undo-tree-id1412 . -12) (undo-tree-id1413 . -12) (undo-tree-id1414 . -12) (undo-tree-id1415 . -12) (undo-tree-id1416 . -12) (undo-tree-id1417 . -12) (undo-tree-id1418 . -12) (undo-tree-id1419 . -12) (undo-tree-id1420 . -12) (undo-tree-id1421 . -12) (undo-tree-id1422 . -12) (undo-tree-id1423 . -12) (undo-tree-id1424 . -12) (undo-tree-id1425 . -12) (undo-tree-id1426 . -12) (undo-tree-id1427 . -12) (undo-tree-id1428 . -12) (undo-tree-id1429 . -12) (undo-tree-id1430 . -12) (undo-tree-id1431 . -12) (undo-tree-id1432 . -12) (undo-tree-id1433 . -12) (undo-tree-id1434 . -12) (undo-tree-id1435 . -12) (undo-tree-id1436 . -12) (undo-tree-id1437 . -12) (undo-tree-id1438 . -12) (undo-tree-id1439 . -12) (undo-tree-id1440 . -12) (undo-tree-id1441 . -12) (undo-tree-id1442 . -12) (undo-tree-id1443 . -12) (undo-tree-id1444 . -12) (undo-tree-id1445 . -12) (undo-tree-id1446 . -12) (undo-tree-id1447 . -12) (undo-tree-id1448 . -12) (undo-tree-id1449 . -12) (undo-tree-id1450 . -12) (undo-tree-id1451 . -12) (undo-tree-id1452 . -12) (undo-tree-id1453 . -12) (undo-tree-id1454 . -12) (undo-tree-id1455 . -12) (undo-tree-id1456 . -12) (undo-tree-id1457 . -12) (undo-tree-id1458 . -12) (undo-tree-id1459 . -12) (undo-tree-id1460 . -12) (undo-tree-id1461 . -12) (undo-tree-id1462 . -12) (undo-tree-id1463 . -12) (undo-tree-id1464 . -12) (undo-tree-id1465 . -12) (undo-tree-id1466 . -12) (undo-tree-id1467 . -12) (undo-tree-id1468 . -12) (undo-tree-id1469 . -12) (undo-tree-id1470 . -12) (undo-tree-id1471 . -12) (undo-tree-id1472 . -12) (undo-tree-id1473 . -12) (undo-tree-id1474 . -12) (undo-tree-id1475 . -12) (undo-tree-id1476 . -12) (undo-tree-id1477 . -12) (undo-tree-id1478 . -12) (undo-tree-id1479 . -12) (undo-tree-id1480 . -12) (undo-tree-id1481 . -12) (undo-tree-id1482 . -12) (undo-tree-id1483 . -12) (undo-tree-id1484 . -12) (undo-tree-id1485 . -12) (undo-tree-id1486 . -12) (undo-tree-id1487 . -12) (undo-tree-id1488 . -12) (undo-tree-id1489 . -12) (undo-tree-id1490 . -12) (undo-tree-id1491 . -12) (undo-tree-id1492 . -12) (undo-tree-id1493 . -12) (undo-tree-id1494 . -12) (undo-tree-id1495 . -12) (undo-tree-id1496 . -12) (undo-tree-id1497 . -12) (undo-tree-id1498 . -12) 750) nil (25629 14387 662353 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -946) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (#("a" 0 1 (fontified t)) . -947) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (#("s" 0 1 (fontified t)) . -948) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -949) (undo-tree-id1538 . -1) 950 (t 25629 14387 664132 752000)) nil (25629 14499 740566 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1421 . 1422) (nil fontified nil 1421 . 1422) (nil fontified nil 1413 . 1421) (nil fontified nil 1358 . 1413) (nil fontified nil 1357 . 1358) (nil fontified nil 1352 . 1357) (nil fontified nil 1334 . 1352) (nil fontified nil 1332 . 1334) (nil fontified nil 1323 . 1332) (nil fontified nil 1321 . 1323) (nil fontified nil 1263 . 1321) (nil fontified nil 1261 . 1263) (nil fontified nil 1252 . 1261) (nil fontified nil 1251 . 1252) (nil fontified nil 1250 . 1251) (nil fontified nil 1245 . 1250) (nil fontified nil 1244 . 1245) (nil fontified nil 1232 . 1244) (nil fontified nil 1228 . 1232) (nil fontified nil 1198 . 1228) (nil fontified nil 1196 . 1198) (nil fontified nil 1184 . 1196) (nil fontified nil 1182 . 1184) (nil fontified nil 1181 . 1182) (nil fontified nil 1174 . 1181) (nil fontified nil 1170 . 1174) (nil fontified nil 1138 . 1170) (nil fontified nil 1136 . 1138) (nil fontified nil 1126 . 1136) (nil fontified nil 1125 . 1126) (nil fontified nil 1124 . 1125) (nil fontified nil 1088 . 1124) (nil fontified nil 1087 . 1088) (nil fontified nil 1082 . 1087) (nil fontified nil 1081 . 1082) (nil fontified nil 1078 . 1081) (nil fontified nil 1077 . 1078) (nil fontified nil 1076 . 1077) (nil fontified nil 1075 . 1076) (nil fontified nil 1070 . 1075) (nil fontified nil 1066 . 1070) (nil fontified nil 1045 . 1066) (nil fontified nil 1043 . 1045) (nil fontified nil 1025 . 1043) (nil fontified nil 1024 . 1025) (nil fontified nil 1015 . 1024) (nil fontified nil 1010 . 1015) (nil fontified nil 948 . 1010) (nil fontified nil 946 . 948) (946 . 1422)) nil (25629 14499 740562 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -942) (undo-tree-id1530 . -4) (undo-tree-id1531 . -4) 946) nil (25629 14499 740557 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1256) (942 . 946)) nil (25629 14499 740556 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -942)) nil (25629 14499 740555 0) 0 nil])
([nil nil ((942 . 946)) nil (25629 14499 740555 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -942) (undo-tree-id1529 . -4) 946) nil (25629 14499 740554 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -1376) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) (undo-tree-id1503 . -4) (undo-tree-id1504 . -4) (1368 . 1376) (1337 . 1341) (1273 . 1277) (#("    " 0 4 (fontified t)) . -1272) (#("    " 0 4 (fontified nil)) . -1252) (undo-tree-id1505 . -4) (undo-tree-id1506 . -4) (undo-tree-id1507 . -4) (undo-tree-id1508 . -4) (1244 . 1252) (#("    " 0 4 (fontified nil)) . -1212) (undo-tree-id1509 . -4) (undo-tree-id1510 . -4) (undo-tree-id1511 . -4) (undo-tree-id1512 . -4) (1204 . 1212) (#("    " 0 4 (fontified t)) . -1203) (#("    " 0 4 (fontified nil)) . -1190) (undo-tree-id1513 . -4) (undo-tree-id1514 . -4) (undo-tree-id1515 . -4) (undo-tree-id1516 . -4) (1182 . 1190) (#("    " 0 4 (fontified nil)) . -1148) (undo-tree-id1517 . -4) (undo-tree-id1518 . -4) (undo-tree-id1519 . -4) (undo-tree-id1520 . -4) (1140 . 1148) (#("    " 0 4 (fontified t)) . -1139) (#("    " 0 4 (fontified nil)) . -1082) (undo-tree-id1521 . -4) (undo-tree-id1522 . -4) (undo-tree-id1523 . -4) (undo-tree-id1524 . -4) (1074 . 1082) (#("    " 0 4 (fontified nil)) . -1051) (undo-tree-id1525 . -4) (undo-tree-id1526 . -4) (undo-tree-id1527 . -4) (undo-tree-id1528 . -4) (1043 . 1051) (1010 . 1014) (942 . 946)) nil (25629 14499 740550 0) 0 nil])
([nil nil ((#("# loop until the user guesses the number or runs out of guesses
while guesses < max_guesses:
    # get the user's guess
    guess = int(input(\"Guess a number between 1 and 100: \"))
    
    # increment the number of guesses
    guesses += 1
    
    # check if the guess is correct
    guess_number(guess)
        
# if the user runs out of guesses, print the correct number
if guesses == max_guesses:
    print(\"Sorry, you ran out of guesses. The correct number was\", number)

" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 64 (face font-lock-comment-face fontified t) 64 69 (face font-lock-keyword-face fontified t) 69 78 (fontified t) 78 79 (face font-lock-operator-face fontified t) 79 97 (fontified t) 97 99 (face font-lock-comment-delimiter-face fontified t) 99 120 (face font-lock-comment-face fontified t) 120 124 (fontified t) 124 129 (face font-lock-variable-name-face fontified t) 129 130 (fontified t) 130 131 (face font-lock-operator-face fontified t) 131 132 (fontified t) 132 135 (face font-lock-builtin-face fontified t) 135 136 (face (rainbow-delimiters-depth-1-face) fontified t) 136 141 (face font-lock-builtin-face fontified t) 141 142 (face (rainbow-delimiters-depth-2-face) fontified t) 142 178 (face font-lock-string-face fontified t) 178 179 (face (rainbow-delimiters-depth-2-face) fontified t) 179 180 (face (rainbow-delimiters-depth-1-face) fontified t) 180 190 (fontified t) 190 192 (face font-lock-comment-delimiter-face fontified t) 192 224 (face font-lock-comment-face fontified t) 224 228 (fontified t) 228 235 (face font-lock-variable-name-face fontified t) 235 236 (fontified t) 236 238 (face font-lock-operator-face fontified t) 238 250 (fontified t) 250 252 (face font-lock-comment-delimiter-face fontified t) 252 282 (face font-lock-comment-face fontified t) 282 286 (fontified t) 286 298 (fontified t) 298 299 (face (rainbow-delimiters-depth-1-face) fontified t) 299 304 (fontified t) 304 305 (face (rainbow-delimiters-depth-1-face) fontified t) 305 306 (fontified t) 306 315 (fontified t) 315 317 (face font-lock-comment-delimiter-face fontified t) 317 375 (face font-lock-comment-face fontified t) 375 377 (face font-lock-keyword-face fontified t) 377 386 (fontified t) 386 388 (face font-lock-operator-face fontified t) 388 406 (fontified t) 406 411 (face font-lock-builtin-face fontified t) 411 412 (face (rainbow-delimiters-depth-1-face) fontified t) 412 467 (face font-lock-string-face fontified t) 467 475 (fontified t) 475 476 (face (rainbow-delimiters-depth-1-face) fontified t) 476 477 (fontified t) 477 478 (fontified t)) . 452) (undo-tree-id1603 . -478) (undo-tree-id1604 . -282) (undo-tree-id1605 . -282) (undo-tree-id1606 . -282) (undo-tree-id1607 . -282) (undo-tree-id1608 . -92) (undo-tree-id1609 . -477) (undo-tree-id1610 . -282) (undo-tree-id1611 . -180) (undo-tree-id1612 . -282) (undo-tree-id1613 . -282) (undo-tree-id1614 . -476) (undo-tree-id1615 . -305) (t 25629 14499 742346 7000)) nil (25629 14803 501400 0) 0 nil])
([nil nil ((461 . 468)) nil (25629 14803 501395 0) 0 nil])
([nil nil ((1013 . 1014)) nil (25629 14803 501394 0) 0 nil])
([nil nil ((#("# set the number of guesses to 0
guesses = 0" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 33 (face font-lock-comment-face fontified t) 33 40 (face font-lock-variable-name-face fontified t) 40 41 (fontified t) 41 42 (face font-lock-operator-face fontified t) 42 44 (fontified t)) . 94) (undo-tree-id1602 . -44)) nil (25629 14803 501394 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -92) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (#("
" 0 1 (fontified t)) . -93) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 94) nil (25629 14803 501393 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -285) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (#("r" 0 1 (fontified t)) . -286) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (#("e" 0 1 (fontified t)) . -287) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (#("a" 0 1 (fontified t)) . -288) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (#("k" 0 1 (face font-lock-keyword-face fontified t)) . -289) (undo-tree-id1597 . -1) 290) nil (25629 14803 501390 0) 0 nil])
([nil nil ((285 . 292)) nil (25629 14803 501386 0) 0 nil])
([nil nil ((292 . 293)) nil (25629 14803 501385 0) 0 nil])
([nil nil ((738 . 741)) nil (25629 14803 501385 0) 0 nil])
([nil nil ((760 . 761)) nil (25629 14803 501385 0) 0 nil])
([nil nil ((761 . 774)) nil (25629 14803 501384 0) 0 nil])
([nil nil ((774 . 779)) nil (25629 14803 501384 0) 0 nil])
([nil nil ((774 . 779) (#("break" 0 5 (face font-lock-keyword-face fontified t)) . -774) (undo-tree-id1587 . -5) (undo-tree-id1588 . -5) 779) nil (25629 14803 501383 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -254) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (#(" " 0 1 (fontified t)) . -255) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (#("g" 0 1 (fontified t)) . -256) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (#("u" 0 1 (fontified t)) . -257) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (#("e" 0 1 (fontified t)) . -258) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (#("s" 0 1 (fontified t)) . -259) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (#("s" 0 1 (fontified t)) . -260) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (#("e" 0 1 (fontified t)) . -261) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (#("s" 0 1 (fontified t)) . -262) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (#("," 0 1 (fontified t)) . -263) (undo-tree-id1585 . -1) (#(" " 0 1 (fontified t)) . -264) (undo-tree-id1586 . -1) 265) nil (25629 14803 501381 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -253) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 254)) nil (25629 14803 501371 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -240) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -241) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -242) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -243) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -244) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -245) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -246) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -247) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -248) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -249) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -250) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -251) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -252) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) 253) nil (25629 14803 501368 0) 0 nil])
([nil nil ((974 . 975) (969 . 975)) nil (25629 14803 501341 0) 0 nil])
([nil current ((976 . 977) 735) nil (25629 14803 501338 0) 0 nil])
nil
